name: Detect Changed Services and Update Go Modules

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  detect-and-update:
    name: Detect Changed Services & Run Go Mod Commands
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full git history

      - name: Set up Git info
        id: git-info
        run: |
          echo "Finding base and head commits..."
          BASE_SHA=$(git merge-base origin/main HEAD || git rev-parse HEAD^)
          HEAD_SHA=$(git rev-parse HEAD)

          echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
          echo "HEAD_SHA=$HEAD_SHA" >> $GITHUB_ENV

      - name: Detect changed services
        id: detect
        run: |
          echo "Changed folders:"
          echo "Base SHA: $BASE_SHA"
          echo "Head SHA: $HEAD_SHA"

          if ! git cat-file -e "$BASE_SHA"; then
            echo "Invalid BASE_SHA: $BASE_SHA"
            exit 0
          fi

          changed=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep '^applications/' | cut -d '/' -f2 | sort -u | uniq)
          echo "$changed"

          echo "services<<EOF" >> $GITHUB_OUTPUT
          echo "$changed" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Configure git to use token for private modules
        run: |
          git config --global url."https://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@github.com/".insteadOf "https://github.com/"

      - name: Run go mod tidy and vendor
        run: |
          echo "${{ steps.detect.outputs.services }}" | tr '\n' ' ' | xargs -n1 | while read service; do
            if [ -n "$service" ] && [ -d "applications/$service" ]; then
              echo "🔧 Running go mod tidy and vendor for $service"
              cd "applications/$service"
              if [ -f "go.mod" ]; then
                go mod tidy
                go mod vendor
              else
                echo "⚠️ Skipped $service — no go.mod found"
              fi
              cd - > /dev/null
            fi
          done
